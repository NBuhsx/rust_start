#![allow(unused_must_use)]

// 7. Выражение

/*
Программы на языке Rust - это (в основном) набор последовательных операторов:

fn main() {
    // оператор
    // оператор
    // оператор
}

Существует несколько типов операторов в Rust.
Наиболее распространённые - оператор связывания и выражение, заканчивающееся ;:

fn main() {
    // оператор связывания
    let x = 5;

    // оператор выражения
    x;
    x + 1;
    15;
}
*/
/*
Блоки так же могут быть частью оператора выражения.
Они используются в качестве r-values при присваивании.
Последнее выражение в блоке будет присвоено l-value.
Однако, если последнее выражение в блоке оканчивается точкой с запятой, в качестве значения будет возвращено ().
*/

fn expression() {
    let x = 5u32;

    let y = {
        let x_squared = x * x;
        let x_cube = x_squared * x;

        x_cube + x_squared + x
    };

    let z = {
        2 * x;
    };
    println!("x равен {:?}", x);
    // >>  x равен 5
    println!("y равен {:?}", y);
    // >> y равен 155
    println!("z равен {:?}", z);
    // >> z равен ()
}

pub fn run7() {
    expression();
}
